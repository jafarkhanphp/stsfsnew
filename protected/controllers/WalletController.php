<?phpclass WalletController extends Controller{		public function actionWidthdraw(){		$invoiceDetails = Yii::app()->db->createCommand("SELECT * FROM test  ")->queryAll();		//echo '<pre>'; print_r($invoiceDetails); exit;		foreach($invoiceDetails as $details){			Yii::app()->db->createCommand()->insert('payment_request', array('rid'=>$details['ID'], 'request_date'=>'2017-12-20', 						 'amount'=>$details['Dedaction'], 'Cheque_UTR'=>'', 'status'=>3, 						 'status_update_date'=>'2017-12-20' , 'remarks'=>'Cash Payment Manual' , 'created'=>date('y-m-d'), 'created_by'=>3));						 $insertId=Yii::app()->db->lastInsertID;				$balAfterDebit=Wallet::model()->getBalanceByDebit($details['ID'], $details['Dedaction']);				Yii::app()->db->createCommand()->insert('wallet', array('rid'=>$details['ID'], 'against_insert_id'=>$insertId, 						 'account_head_id'=>3, 'account_head_name'=>'Withdrawal', 'credit'=>0, 						 'debit'=>$details['Dedaction'] , 'balance'=>$balAfterDebit , 'created'=>date('y-m-d'), 'created_by'=>3));						 		}	}				public function actionWallet_Insert(){		$invoiceDetails = Yii::app()->db->createCommand("SELECT rid, id, gross_amount FROM invoices where created_date='2017-12-26' ")->queryAll();		foreach($invoiceDetails as $details){		$balAfterDebit=Wallet::model()->getBalanceByCredit($details['rid'], $details['gross_amount']);				Yii::app()->db->createCommand()->insert('wallet', array('rid'=>$details['rid'], 'against_insert_id'=>$details['id'], 						 'account_head_id'=>1, 'account_head_name'=>'Invoice Payment', 'credit'=>$details['gross_amount'], 						 'debit'=>0 , 'balance'=>$balAfterDebit , 'created'=>date('y-m-d'), 'created_by'=>3));						 		}	}				public function actionView($id)	{		$this->render('view',array(			'model'=>$this->loadModel($id),		));	}	/**	 * Creates a new model.	 * If creation is successful, the browser will be redirected to the 'view' page.	 */	public function actionCreate()	{		$model=new Wallet;		// Uncomment the following line if AJAX validation is needed		// $this->performAjaxValidation($model);		if(isset($_POST['Wallet']))		{			$model->attributes=$_POST['Wallet'];			if($model->save())				$this->redirect(array('view','id'=>$model->id));		}		$this->render('create',array(			'model'=>$model,		));	}	/**	 * Updates a particular model.	 * If update is successful, the browser will be redirected to the 'view' page.	 * @param integer $id the ID of the model to be updated	 */	public function actionUpdate($id)	{		$model=$this->loadModel($id);		// Uncomment the following line if AJAX validation is needed		// $this->performAjaxValidation($model);		if(isset($_POST['Wallet']))		{			$model->attributes=$_POST['Wallet'];			if($model->save())				$this->redirect(array('view','id'=>$model->id));		}		$this->render('update',array(			'model'=>$model,		));	}	/**	 * Deletes a particular model.	 * If deletion is successful, the browser will be redirected to the 'admin' page.	 * @param integer $id the ID of the model to be deleted	 */	public function actionDelete($id)	{		$this->loadModel($id)->delete();		// if AJAX request (triggered by deletion via admin grid view), we should not redirect the browser		if(!isset($_GET['ajax']))			$this->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin'));	}			public function actionIndex($search=''){		$this->layout = false;			if(Yii::app()->user->id==''){  				Yii::app()->user->setFlash('error', "Please login again!");				$this->redirect(array('/site/login'));			} 			$checkPermission=Yii::app()->session['permissions'];			if($checkPermission[0]['lists']!=0){				Yii::app()->user->setFlash('danger', '<i class="fa fa-times-circle"></i><strong> PermissionDenied</strong>');				$this->redirect(array('/user/dashboard'));			}					$model = new Wallet($scenario='search');		$criteria = new CDbCriteria;		if(isset($_GET['Wallet'])){				$model->attributes=$_GET['Wallet'];				$criteria->addSearchCondition('t.rid', '%'.$_GET['Wallet']['rid']."%", 0);								$criteria->addSearchCondition('t.created', '%'.$_GET['Wallet']['created']."%", 0);				$criteria->addSearchCondition('t.balance', $_GET['Wallet']['balance']."%", 0);									} 					/*if(Yii::app()->user->getState('user_type')==1){			$criteria->join = 'LEFT JOIN registrations ON registrations.Rid = t.rid';			$userBranch=Yii::app()->user->getState('branch_id');			$criteria->condition = "registrations.branch_id= '$userBranch'";		}*/								$dataProvider=new CActiveDataProvider('Wallet', array('criteria' => $criteria,		'sort'=>array( 'defaultOrder'=> array('id'=>true),  ), 		'pagination' => array ( 'PageSize' => 20,  ) ,		));		$this->render('index',array('dataProvider'=>$dataProvider,'model'=>$model));		}		public function actionUser_Wallet($search=''){		$this->layout = false;			if(Yii::app()->user->id==''){  				Yii::app()->user->setFlash('error', "Please login again!");				$this->redirect(array('/site/login'));			} 					$model = new Wallet($scenario='search');		$usercode=Yii::app()->user->getState('usercode');		$criteria = new CDbCriteria;		if(isset($_GET['Wallet'])){				$model->attributes=$_GET['Wallet'];				$criteria->addSearchCondition('t.rid', '%'.$_GET['Wallet']['rid']."%", 0);								$criteria->addSearchCondition('t.created', '%'.$_GET['Wallet']['created']."%", 0);				$criteria->addSearchCondition('t.balance', $_GET['Wallet']['balance']."%", 0);									} 				$criteria->condition = "t.rid= '$usercode'";										$dataProvider=new CActiveDataProvider('Wallet', array('criteria' => $criteria,		'sort'=>array( 'defaultOrder'=> array('id'=>true),  ), 		'pagination' => array ( 'PageSize' => 20,  ) ,		));		$this->render('user_wallet',array('dataProvider'=>$dataProvider,'model'=>$model));		}				/**	 * Returns the data model based on the primary key given in the GET variable.	 * If the data model is not found, an HTTP exception will be raised.	 * @param integer $id the ID of the model to be loaded	 * @return Wallet the loaded model	 * @throws CHttpException	 */	public function loadModel($id)	{		$model=Wallet::model()->findByPk($id);		if($model===null)			throw new CHttpException(404,'The requested page does not exist.');		return $model;	}	/**	 * Performs the AJAX validation.	 * @param Wallet $model the model to be validated	 */	protected function performAjaxValidation($model)	{		if(isset($_POST['ajax']) && $_POST['ajax']==='wallet-form')		{			echo CActiveForm::validate($model);			Yii::app()->end();		}	}}