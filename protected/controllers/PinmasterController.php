<?phpclass PinmasterController extends Controller{	public function actionCreatepin(){		$this->layout= false;		if(Yii::app()->user->id==''){  			Yii::app()->user->setFlash('error', "Please login again!");            $this->redirect(array('/site/login'));		} 				$model=new Pinmaster;		$model1=new Pincreates;		$totalWalletAmount =Wallet::Model()->getWAlletAmt(Yii::app()->user->getState('usercode')); 		if(isset($_POST['Pinmaster'])){				$model->attributes=$_POST['Pinmaster'];				if ($model->validate())	{					$curentDate=date('Y-m-d');					$package_amt=Packages::model()->getAmountById($_POST['Pinmaster']['pkg_id']);					$model->pkg_id	    =  $_POST['Pinmaster']['pkg_id'];					$model->no_pin	    =  $_POST['Pinmaster']['no_pin'];					$pinAmt				=	$_POST['Pinmaster']['no_pin']*$package_amt;					if($pinAmt>$totalWalletAmount){						Yii::app()->user->setFlash('danger', '<i class="fa fa-times-circle"></i><strong> Inefficient amount in E-Wallet !</strong>');						$this->redirect(array('pinmaster/createpin'));										}					$model->pin_pkg_amt	=  $pinAmt;					$model->created_date  	=$curentDate;					$model->flag	    =  0;					$model->created_by 	    =Yii::app()->user->getState('usercode');					if($model->save()){							$lastId=Yii::app()->db->lastInsertID;							$user_id=Yii::app()->user->id;							$balAfterDebit=Wallet::model()->getBalanceByDebit(Yii::app()->user->getState('usercode'), $pinAmt);							Yii::app()->db->createCommand()->insert('wallet', array('rid'=>Yii::app()->user->getState('usercode'), 'against_insert_id'=>$lastId, 						 'account_head_id'=>2, 'account_head_name'=>'Pin Purchasing', 'credit'=>0, 'debit'=>$pinAmt , 'balance'=>$balAfterDebit ,						 'created'=>$curentDate, 'created_by'=>$user_id));							$connection=Yii::app()->db;							$i = 1;							$pinTotal=$_POST['Pinmaster']['no_pin'];							while ($i <= $pinTotal) {								$uniqPinNo=Yii::app()->myclass->getUniquePassword();								$Rid	    =  Yii::app()->user->getState('usercode');								$status  		= 0; 								$pinStatus	=0;								$transfer_rid=0;								$transfer_date='';								$sql1 = "insert into pincreates SET PinNo = '$uniqPinNo',Rid='$Rid', Status = '$status',								user_id='$user_id', transfer_rid='$transfer_rid', transfer_date='$transfer_date', pin_master_id='$lastId',								created_by='$user_id',created='$curentDate'";								$command1 = $connection->createCommand($sql1);								$command1->execute();								$i++; 							}							Yii::app()->user->setFlash('success', '<i class="fa fa-check-circle"></i><strong> Pin Created Successfully!</strong>');							$this->redirect(array('pinmaster/user_pin_history'));					}				}         		}		$this->render('create_user_pin',array('model'=>$model, 'totalWalletAmount'=>$totalWalletAmount));	}		public function actionCreate(){		$this->layout= false;		if(Yii::app()->user->id==''){  			Yii::app()->user->setFlash('error', "Please login again!");            $this->redirect(array('/site/login'));		} 		$checkPermission=Yii::app()->session['permissions'];		if($checkPermission[0]['adds']!=0){			Yii::app()->user->setFlash('danger', '<i class="fa fa-times-circle"></i><strong> Permission Denied</strong>');			$this->redirect(array('/site/dashboard'));		}		$model=new Pinmaster;		$model1=new Pincreates;		if(isset($_POST['Pinmaster'])){				$model->attributes=$_POST['Pinmaster'];				if ($model->validate())	{					$curentDate=date('Y-m-d');					$package_amt=Packages::model()->getAmountById($_POST['Pinmaster']['pkg_id']);					$model->pkg_id	    =  $_POST['Pinmaster']['pkg_id'];					$sponserID=$_POST['Pinmaster']['transfer_to'];					if($sponserID!=''){						$countRegistration=Registrations::model()->checkSponserId($sponserID);						if($countRegistration==0){							Yii::app()->user->setFlash('danger', '<i class="fa fa-times-circle"></i><strong> Sponsor Id not Match!</strong>');							$this->redirect(array('pinmaster/create'));						}					}										$model->transfer_to	=  $sponserID;					$model->no_pin	    =  $_POST['Pinmaster']['no_pin'];					$model->pin_pkg_amt	=  $_POST['Pinmaster']['no_pin']*$package_amt;					$model->created_date  	=$curentDate;										if($_POST['Pinmaster']['transfer_to']!=""){						$model->flag	    =  1;					}else{						$model->flag	    =  0;					}					$model->created_by 	    =Yii::app()->user->getState('usercode');					if($model->save()){							$lastId=Yii::app()->db->lastInsertID;							 $connection=Yii::app()->db;							 $user_id=Yii::app()->user->id;							 							$i = 1;							$pinTotal=$_POST['Pinmaster']['no_pin'];							while ($i <= $pinTotal) {								$uniqPinNo=Yii::app()->myclass->getUniquePassword();								//unset($model1->id);								if($_POST['Pinmaster']['transfer_to']!=""){									$Rid= $_POST['Pinmaster']['transfer_to'];									$status= 1; 									$transfer_rid=Yii::app()->user->getState('usercode');									$transfer_date=$curentDate;								}else{									$Rid	    =  Yii::app()->user->getState('usercode');									$status  		= 0; 									$pinStatus	=0;									$transfer_rid=0;									$transfer_date='';								}								$sql1 = "insert into pincreates SET PinNo = '$uniqPinNo',Rid='$Rid', Status = '$status',								user_id='$user_id', transfer_rid='$transfer_rid', transfer_date='$transfer_date', pin_master_id='$lastId',								created_by='$user_id',created='$curentDate'";								$command1 = $connection->createCommand($sql1);								$command1->execute();								$i++; 							}														Yii::app()->user->setFlash('success', '<i class="fa fa-check-circle"></i><strong> Pin Created Successfully!</strong>');							$this->redirect(array('index'));					}				}                                 		}		$this->render('create',array('model'=>$model,));	}public function actionUser_Pin_History($search=''){		$this->layout = false;		if(Yii::app()->user->id==''){  			Yii::app()->user->setFlash('error', "Please login again!");			$this->redirect(array('/site/login'));		} 		$model = new Pinmaster($scenario='search');		$usercode=Yii::app()->user->getState('usercode');		$criteria = new CDbCriteria;		if(isset($_GET['Pinmaster'])){				$model->attributes=$_GET['Pinmaster'];				$criteria->addSearchCondition('t.transfer_to', $_GET['Pinmaster']['transfer_to']."%", 0);							}					$criteria->addCondition('t.created_by ='.$usercode);		$dataProvider=new CActiveDataProvider('Pinmaster', array('criteria' => $criteria,		'sort'=>array( 'defaultOrder'=> array('id'=>true),  ),		'pagination' => array ( 'PageSize' => 100,  ) ,		));		$this->render('user_pin_history',array('dataProvider'=>$dataProvider,'model'=>$model));	}		public function actionIndex()	{		$this->layout= false;		if(Yii::app()->user->id==''){  			Yii::app()->user->setFlash('error', "Please login again!");            $this->redirect(array('/site/login'));		} 		$checkPermission=Yii::app()->session['permissions'];		if($checkPermission[0]['adds']!=0){			Yii::app()->user->setFlash('danger', '<i class="fa fa-times-circle"></i><strong> Permission Denied</strong>');			$this->redirect(array('/user/dashboard'));		}				$model = new Pinmaster($scenario='search');		$criteria = new CDbCriteria;		if(isset($_GET['Pinmaster'])){				$model->attributes=$_GET['Pinmaster'];				//$criteria->addSearchCondition('t.id', $_GET['Pincreates']['id']."%", 0);				//$criteria->addSearchCondition('t.transfer_status', $_GET['Pincreates']['transfer_status'], 0);				//$criteria->addSearchCondition('t.user_id', $_GET['Pincreates']['user_id'], 0);				//$criteria->addSearchCondition('t.issued_rid', $_GET['Pincreates']['issued_rid']."%", 0);			}					$dataProvider=new CActiveDataProvider('Pinmaster', array('criteria' => $criteria,		'sort'=>array( 'defaultOrder'=> array('id'=>true),  ), 		'pagination' => array ( 'PageSize' => 100,  ) 		));		$this->render('index',array('dataProvider'=>$dataProvider,'model'=>$model, ));	}				public function loadModel($id)	{		$model=Pinmaster::model()->findByPk($id);		if($model===null)			throw new CHttpException(404,'The requested page does not exist.');		return $model;	}	// Uncomment the following methods and override them if needed	/*	public function filters()	{		// return the filter configuration for this controller, e.g.:		return array(			'inlineFilterName',			array(				'class'=>'path.to.FilterClass',				'propertyName'=>'propertyValue',			),		);	}	public function actions()	{		// return external action classes, e.g.:		return array(			'action1'=>'path.to.ActionClass',			'action2'=>array(				'class'=>'path.to.AnotherActionClass',				'propertyName'=>'propertyValue',			),		);	}	*/}