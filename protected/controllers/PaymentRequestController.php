<?phpclass PaymentRequestController extends Controller{			/**	 * Displays a particular model.	 * @param integer $id the ID of the model to be displayed	 */	public function actionView($id)	{		$this->render('view',array(			'model'=>$this->loadModel($id),		));	}		public function actionWithdrawal_Request(){		$this->layout= false;		if(Yii::app()->user->id==''){  			Yii::app()->user->setFlash('error', "Please login again!");            $this->redirect(array('/site/login'));		} 			$model=new PaymentRequest;		$totalWalletAmount =Wallet::Model()->getWAlletAmt(Yii::app()->user->getState('usercode')); 		if(isset($_POST['PaymentRequest'])){				$model->attributes=$_POST['PaymentRequest'];				$valid=$model->validate();                          if($valid){					$curentDate=date('Y-m-d');					$model->rid 	    		=Yii::app()->user->getState('usercode');					$model->request_date 	    =$curentDate;					$model->amount 	   			=$_POST['PaymentRequest']['amount'];					$model->payment_mod 	    =$_POST['PaymentRequest']['payment_mod'];					$model->status 	    		=0;					$model->created 	   		 =$curentDate;					$model->created_by 	   		 =Yii::app()->user->id;					if(($_POST['PaymentRequest']['amount'])>$totalWalletAmount){							Yii::app()->user->setFlash('danger', '<i class="fa fa-check-circle"></i><strong> Request amount should not be greater than wallet amount!</strong>');							$this->redirect(array('paymentRequest/withdrawal_request'));					}										if(($_POST['PaymentRequest']['amount'])<1000){							Yii::app()->user->setFlash('danger', '<i class="fa fa-check-circle"></i><strong> Wallet amount should not be less than 1000!</strong>');							$this->redirect(array('paymentRequest/withdrawal_request'));					}														if($model->save()){							Yii::app()->user->setFlash('success', '<i class="fa fa-check-circle"></i><strong> Payment Request submit  successfully!</strong>');							$this->redirect(array('paymentRequest/widthdraw_list'));					}			}		}		$this->render('withdrawal_request',array('model'=>$model, 'totalWalletAmount'=>$totalWalletAmount));	}			public function actionUpdate_Payment(){		$this->layout= false;		if(Yii::app()->user->id==''){  			Yii::app()->user->setFlash('error', "Please login again!");            $this->redirect(array('/site/login'));			} 			$model=new PaymentRequest;		$id=base64_decode($_GET['id']);				$model=$this->loadModel($id);		if($id==''){			Yii::app()->user->setFlash('danger', '<i class="fa fa-check-circle"></i><strong> Parameter missing!</strong>');		}		if(PaymentRequest::model()->checkID($id)==0){			Yii::app()->user->setFlash('danger', '<i class="fa fa-check-circle"></i><strong> Parameter missing!</strong>');		}				if(isset($_POST['PaymentRequest'])){				$model->attributes=$_POST['PaymentRequest'];				$valid=$model->validate();                          if($valid){					$curentDate=date('Y-m-d');					$amount 	   			=$_POST['PaymentRequest']['amount'];					$payment_mod 	    	=$_POST['PaymentRequest']['payment_mod'];					$status 	    		=$_POST['PaymentRequest']['status'];					$Cheque_UTR 	    		=$_POST['PaymentRequest']['Cheque_UTR'];					$remarks 	    		=$_POST['PaymentRequest']['remarks'];															$connection=Yii::app()->db;					$sql = "update payment_request set amount='$amount', payment_mod='$payment_mod', status='$status', Cheque_UTR='$Cheque_UTR', remarks='$remarks', 					status_update_date='$curentDate' WHERE id=$id ";					$command = $connection->createCommand($sql);					$command->execute();					if($status==3){											$balAfterDebit=Wallet::model()->getBalanceByDebit($model->rid, $amount);							Yii::app()->db->createCommand()->insert('wallet', array('rid'=>$model->rid, 'against_insert_id'=>$model->id, 						 'account_head_id'=>3, 'account_head_name'=>'Withdrawal ', 'credit'=>0, 'debit'=>$amount , 'balance'=>$balAfterDebit ,						 'created'=>$curentDate, 'created_by'=>Yii::app()->user->id));					}										if($status==0){$st='waiting';}else if($status==1){$st='process';}else if($status==2){$st='reject';}else if($status==3){$st='completed';}					$mobile=Registrations::model()->MobileNoByRID($model->rid);							$greensms="$model->rid, Your Payment Request updated against $amount amount. (status is:  $st ) ";					Yii::app()->myclass->sendSMS($mobile,$greensms);														Yii::app()->user->setFlash('success', '<i class="fa fa-check-circle"></i><strong> Payment Request updated  successfully!</strong>');					$this->redirect(array('paymentRequest/request_list'));								}		}		$this->render('update_payment',array('model'=>$model));	}						/**	 * Updates a particular model.	 * If update is successful, the browser will be redirected to the 'view' page.	 * @param integer $id the ID of the model to be updated	 */	public function actionUpdate($id)	{		$model=$this->loadModel($id);		// Uncomment the following line if AJAX validation is needed		// $this->performAjaxValidation($model);		if(isset($_POST['PaymentRequest']))		{			$model->attributes=$_POST['PaymentRequest'];			if($model->save())				$this->redirect(array('view','id'=>$model->id));		}		$this->render('update',array(			'model'=>$model,		));	}	/**	 * Deletes a particular model.	 * If deletion is successful, the browser will be redirected to the 'admin' page.	 * @param integer $id the ID of the model to be deleted	 */	public function actionDelete($id)	{		$this->loadModel($id)->delete();		// if AJAX request (triggered by deletion via admin grid view), we should not redirect the browser		if(!isset($_GET['ajax']))			$this->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin'));	}		public function actionIndex($search=''){		$this->layout = false;			if(Yii::app()->user->id==''){  				Yii::app()->user->setFlash('error', "Please login again!");				$this->redirect(array('/site/login'));			} 			$checkPermission=Yii::app()->session['permissions'];			if($checkPermission[0]['lists']!=0){				Yii::app()->user->setFlash('danger', '<i class="fa fa-times-circle"></i><strong> PermissionDenied</strong>');				$this->redirect(array('/user/dashboard'));			}					$model = new PaymentRequest($scenario='search');		$criteria = new CDbCriteria;		if(isset($_GET['PaymentRequest'])){				$model->attributes=$_GET['PaymentRequest'];				$criteria->addSearchCondition('t.rid', '%'.$_GET['PaymentRequest']['rid']."%", 0);								$criteria->addSearchCondition('t.payment_mod', '%'.$_GET['PaymentRequest']['payment_mod']."%", 0);				$criteria->addSearchCondition('t.Cheque_UTR', $_GET['PaymentRequest']['Cheque_UTR']."%", 0);				$criteria->addSearchCondition('t.status', $_GET['PaymentRequest']['status']."%", 0);				$criteria->addSearchCondition('t.status_update_date', $_GET['PaymentRequest']['status_update_date']."%", 0);									} 		$criteria->addSearchCondition('t.status', 3, 0);		$criteria->addSearchCondition('t.delete_status', 1, 0);		//$criteria->condition = " t.delete_status=1";					$dataProvider=new CActiveDataProvider('PaymentRequest', array('criteria' => $criteria,		'sort'=>array( 'defaultOrder'=> array('id'=>true),  ), 		'pagination' => array ( 'PageSize' => 20,  ) ,		));		$this->render('index',array('dataProvider'=>$dataProvider,'model'=>$model));		}			public function actionWidthdraw_List($search=''){		$this->layout = false;		if(Yii::app()->user->id==''){  				Yii::app()->user->setFlash('error', "Please login again!");				$this->redirect(array('/site/login'));			} 					$model = new PaymentRequest($scenario='search');		$usercode=Yii::app()->user->getState('usercode');		$criteria = new CDbCriteria;		if(isset($_GET['PaymentRequest'])){				$model->attributes=$_GET['PaymentRequest'];											$criteria->addSearchCondition('t.payment_mod', '%'.$_GET['PaymentRequest']['payment_mod']."%", 0);				$criteria->addSearchCondition('t.Cheque_UTR', $_GET['PaymentRequest']['Cheque_UTR']."%", 0);				$criteria->addSearchCondition('t.status', $_GET['PaymentRequest']['status']."%", 0);				$criteria->addSearchCondition('t.status_update_date', $_GET['PaymentRequest']['status_update_date']."%", 0);									} 					$criteria->condition = "t.rid= '$usercode' and t.delete_status=1";								$dataProvider=new CActiveDataProvider('PaymentRequest', array('criteria' => $criteria,		'sort'=>array( 'defaultOrder'=> array('id'=>true),  ), 		'pagination' => array ( 'PageSize' => 20,  ) ,		));		$this->render('widthdraw_list',array('dataProvider'=>$dataProvider,'model'=>$model));		}			public function actionRequest_List($search=''){		$this->layout = false;		if(Yii::app()->user->id==''){  				Yii::app()->user->setFlash('error', "Please login again!");				$this->redirect(array('/site/login'));			} 					$model = new PaymentRequest($scenario='search');		$usercode=Yii::app()->user->getState('usercode');		$criteria = new CDbCriteria;		if(isset($_GET['PaymentRequest'])){				$model->attributes=$_GET['PaymentRequest'];				$criteria->addSearchCondition('t.rid', '%'.$_GET['PaymentRequest']['rid']."%", 0);					$criteria->addSearchCondition('t.request_date', '%'.$_GET['PaymentRequest']['request_date']."%", 0);				$criteria->addSearchCondition('t.amount', '%'.$_GET['PaymentRequest']['amount']."%", 0);				//$criteria->addSearchCondition('t.payment_mod', '%'.$_GET['PaymentRequest']['payment_mod']."%", 0);				//$criteria->addSearchCondition('t.status', $_GET['PaymentRequest']['status'], 0);				//$criteria->addSearchCondition('t.status_update_date', $_GET['PaymentRequest']['status_update_date']."%", 0);									} 					$criteria->condition = " t.delete_status=1 and (t.status=0 or t.status=1 or t.status=2) ";								$dataProvider=new CActiveDataProvider('PaymentRequest', array('criteria' => $criteria,		'sort'=>array( 'defaultOrder'=> array('id'=>true),  ), 		'pagination' => array ( 'PageSize' => 20,  ) ,		));		$this->render('request_list',array('dataProvider'=>$dataProvider,'model'=>$model));		}							/**	 * Manages all models.	 */	public function actionAdmin()	{		$model=new PaymentRequest('search');		$model->unsetAttributes();  // clear any default values		if(isset($_GET['PaymentRequest']))			$model->attributes=$_GET['PaymentRequest'];		$this->render('admin',array(			'model'=>$model,		));	}	/**	 * Returns the data model based on the primary key given in the GET variable.	 * If the data model is not found, an HTTP exception will be raised.	 * @param integer $id the ID of the model to be loaded	 * @return PaymentRequest the loaded model	 * @throws CHttpException	 */	public function loadModel($id)	{		$model=PaymentRequest::model()->findByPk($id);		if($model===null)			throw new CHttpException(404,'The requested page does not exist.');		return $model;	}	/**	 * Performs the AJAX validation.	 * @param PaymentRequest $model the model to be validated	 */	protected function performAjaxValidation($model)	{		if(isset($_POST['ajax']) && $_POST['ajax']==='payment-request-form')		{			echo CActiveForm::validate($model);			Yii::app()->end();		}	}}