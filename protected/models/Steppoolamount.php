<?php/** * This is the model class for table "steppoolamount". * * The followings are the available columns in table 'steppoolamount': * @property integer $id * @property integer $Rid * @property string $plan_name * @property integer $amount * @property integer $totalmember * @property integer $paymentstatus * @property integer $created */class Steppoolamount extends CActiveRecord{	/**	 * @return string the associated database table name	 */	public function tableName()	{		return 'steppoolamount';	}	/**	 * @return array validation rules for model attributes.	 */	public function rules()	{		// NOTE: you should only define rules for those attributes that		// will receive user inputs.		return array(			array('Rid, plan_name, amount, totalmember, created', 'required'),			array('Rid, amount, totalmember, paymentstatus, created', 'numerical', 'integerOnly'=>true),			array('plan_name', 'length', 'max'=>50),			// The following rule is used by search().			// @todo Please remove those attributes that should not be searched.			array('id, Rid, plan_name, amount, totalmember, paymentstatus, created', 'safe', 'on'=>'search'),		);	}	/**	 * @return array relational rules.	 */	public function relations()	{		// NOTE: you may need to adjust the relation name and the related		// class name for the relations automatically generated below.		return array(		);	}	/**	 * @return array customized attribute labels (name=>label)	 */	public function attributeLabels()	{		return array(			'id' => 'ID',			'Rid' => 'Rid',			'plan_name' => 'Plan Name',			'amount' => 'Amount',			'totalmember' => 'Total Member',			'paymentstatus' => 'Payment Status',			'created' => 'Created',		);	}	/**	 * Retrieves a list of models based on the current search/filter conditions.	 *	 * Typical usecase:	 * - Initialize the model fields with values from filter form.	 * - Execute this method to get CActiveDataProvider instance which will filter	 * models according to data in model fields.	 * - Pass data provider to CGridView, CListView or any similar widget.	 *	 * @return CActiveDataProvider the data provider that can return the models	 * based on the search/filter conditions.	 */	public function search()	{		// @todo Please modify the following code to remove attributes that should not be searched.		$criteria=new CDbCriteria;		$criteria->compare('id',$this->id);		$criteria->compare('Rid',$this->Rid);		$criteria->compare('plan_name',$this->plan_name,true);		$criteria->compare('amount',$this->amount);		$criteria->compare('totalmember',$this->totalmember);		$criteria->compare('paymentstatus',$this->paymentstatus);		$criteria->compare('created',$this->created);		return new CActiveDataProvider($this, array(			'criteria'=>$criteria,		));	}		public static function getStepPoolAmt($rid){			$sql="SELECT id, amount, totalmember, level FROM steppoolamount where Rid='$rid' and paymentstatus=0 ";			$command=Yii::app()->db->createCommand($sql);			$queryArray=$command->queryRow();			return $queryArray;   }				public static function AutosharingTurnover($rid){			$sql="SELECT sum(amount) as amt FROM steppoolamount where Rid='$rid' ";			$command=Yii::app()->db->createCommand($sql);			$queryArray=$command->queryRow();			return $queryArray['amt'];   }			public static function MyLevel($rid){			$sql="SELECT level FROM steppools where Rid='$rid'  ";			$command=Yii::app()->db->createCommand($sql);			$queryArray=$command->queryRow();			return $queryArray['level'];   }		public static function MyDirectSponser($rid){			$sql="SELECT direct_sponser FROM steppools where Rid='$rid' ";			$command=Yii::app()->db->createCommand($sql);			$queryArray=$command->queryRow();			return $queryArray['direct_sponser'];   }				/**	 * Returns the static model of the specified AR class.	 * Please note that you should have this exact method in all your CActiveRecord descendants!	 * @param string $className active record class name.	 * @return Steppoolamount the static model class	 */	public static function model($className=__CLASS__)	{		return parent::model($className);	}}